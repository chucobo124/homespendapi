// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/homespendapi/service/accounts/proto/account.proto

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	github.com/homespendapi/service/accounts/proto/account.proto

It has these top-level messages:
	CreateAccountRequest
	CreateAccountResponse
	Account
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import utils "github.com/homespendapi/service/utils/proto"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountStat int32

const (
	AccountStat_error      AccountStat = 0
	AccountStat_pending    AccountStat = 1
	AccountStat_transfered AccountStat = 2
	AccountStat_removed    AccountStat = 99
)

var AccountStat_name = map[int32]string{
	0:  "error",
	1:  "pending",
	2:  "transfered",
	99: "removed",
}
var AccountStat_value = map[string]int32{
	"error":      0,
	"pending":    1,
	"transfered": 2,
	"removed":    99,
}

func (x AccountStat) String() string {
	return proto.EnumName(AccountStat_name, int32(x))
}
func (AccountStat) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateAccountRequest struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateAccountRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type CreateAccountResponse struct {
	RespMsg *utils.RespMsg `protobuf:"bytes,1,opt,name=resp_msg,json=respMsg" json:"resp_msg,omitempty"`
}

func (m *CreateAccountResponse) Reset()                    { *m = CreateAccountResponse{} }
func (m *CreateAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountResponse) ProtoMessage()               {}
func (*CreateAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateAccountResponse) GetRespMsg() *utils.RespMsg {
	if m != nil {
		return m.RespMsg
	}
	return nil
}

type Account struct {
	Id          int64                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ColumnName  string                     `protobuf:"bytes,2,opt,name=column_name,json=columnName" json:"column_name,omitempty"`
	Amount      float32                    `protobuf:"fixed32,3,opt,name=amount" json:"amount,omitempty"`
	Stat        AccountStat                `protobuf:"varint,4,opt,name=stat,enum=account.AccountStat" json:"stat,omitempty"`
	Remark      string                     `protobuf:"bytes,5,opt,name=remark" json:"remark,omitempty"`
	AuthoriseBy string                     `protobuf:"bytes,6,opt,name=authorise_by,json=authoriseBy" json:"authorise_by,omitempty"`
	PrepareBy   string                     `protobuf:"bytes,7,opt,name=prepare_by,json=prepareBy" json:"prepare_by,omitempty"`
	CreateAt    *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=create_at,json=createAt" json:"create_at,omitempty"`
	UpdateAt    *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=update_at,json=updateAt" json:"update_at,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Account) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Account) GetColumnName() string {
	if m != nil {
		return m.ColumnName
	}
	return ""
}

func (m *Account) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Account) GetStat() AccountStat {
	if m != nil {
		return m.Stat
	}
	return AccountStat_error
}

func (m *Account) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Account) GetAuthoriseBy() string {
	if m != nil {
		return m.AuthoriseBy
	}
	return ""
}

func (m *Account) GetPrepareBy() string {
	if m != nil {
		return m.PrepareBy
	}
	return ""
}

func (m *Account) GetCreateAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreateAt
	}
	return nil
}

func (m *Account) GetUpdateAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdateAt
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateAccountRequest)(nil), "account.CreateAccountRequest")
	proto.RegisterType((*CreateAccountResponse)(nil), "account.CreateAccountResponse")
	proto.RegisterType((*Account)(nil), "account.Account")
	proto.RegisterEnum("account.AccountStat", AccountStat_name, AccountStat_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Accounts service

type AccountsClient interface {
	// Create a Account
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
}

type accountsClient struct {
	cc *grpc.ClientConn
}

func NewAccountsClient(cc *grpc.ClientConn) AccountsClient {
	return &accountsClient{cc}
}

func (c *accountsClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := grpc.Invoke(ctx, "/account.Accounts/CreateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Accounts service

type AccountsServer interface {
	// Create a Account
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
}

func RegisterAccountsServer(s *grpc.Server, srv AccountsServer) {
	s.RegisterService(&_Accounts_serviceDesc, srv)
}

func _Accounts_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.Accounts/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Accounts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.Accounts",
	HandlerType: (*AccountsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _Accounts_CreateAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/homespendapi/service/accounts/proto/account.proto",
}

func init() {
	proto.RegisterFile("github.com/homespendapi/service/accounts/proto/account.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x51, 0x6f, 0xd3, 0x40,
	0x0c, 0xc7, 0x97, 0x6c, 0x6b, 0x1a, 0x07, 0xaa, 0xe8, 0x34, 0x50, 0x54, 0x69, 0xac, 0xf4, 0x29,
	0xec, 0x21, 0x91, 0xca, 0xc3, 0x5e, 0x78, 0x69, 0x78, 0x06, 0xa1, 0xc0, 0x23, 0x52, 0x75, 0x4d,
	0xbc, 0x34, 0xa2, 0x97, 0x3b, 0xee, 0x9c, 0x49, 0xfd, 0x86, 0x7c, 0x2c, 0x94, 0xbb, 0x64, 0x82,
	0x09, 0xb4, 0xb7, 0xb3, 0xfd, 0xfb, 0xdb, 0x3e, 0xdb, 0xf0, 0xa1, 0x69, 0xe9, 0xd0, 0xef, 0xb3,
	0x4a, 0x8a, 0xfc, 0x20, 0x05, 0x1a, 0x85, 0x5d, 0xcd, 0x55, 0x9b, 0x1b, 0xd4, 0x0f, 0x6d, 0x85,
	0x39, 0xaf, 0x2a, 0xd9, 0x77, 0x64, 0x72, 0xa5, 0x25, 0xc9, 0xc9, 0xcc, 0xac, 0xc5, 0x82, 0xd1,
	0x5c, 0xde, 0x34, 0x52, 0x36, 0x47, 0x74, 0xd0, 0xbe, 0xbf, 0xcf, 0xa9, 0x15, 0x68, 0x88, 0x0b,
	0xe5, 0xc8, 0xe5, 0xdd, 0x73, 0x75, 0x7a, 0x6a, 0x8f, 0x53, 0x11, 0xfb, 0x76, 0xc2, 0x75, 0x01,
	0x57, 0x1f, 0x35, 0x72, 0xc2, 0xad, 0x2b, 0x55, 0xe2, 0xcf, 0x1e, 0x0d, 0xb1, 0x5b, 0x98, 0x8a,
	0x27, 0xde, 0xca, 0x4b, 0xa3, 0x4d, 0x9c, 0x4d, 0xbd, 0x4d, 0xe4, 0x04, 0xac, 0x0b, 0x78, 0xf5,
	0x24, 0x87, 0x51, 0xb2, 0x33, 0xc8, 0xde, 0xc1, 0x5c, 0xa3, 0x51, 0x3b, 0x61, 0x9a, 0x31, 0xcb,
	0x22, 0x73, 0xc5, 0x07, 0xe4, 0x93, 0x69, 0xca, 0x40, 0xbb, 0xc7, 0xfa, 0x97, 0x0f, 0xc1, 0x28,
	0x67, 0x0b, 0xf0, 0xdb, 0xda, 0x0a, 0xce, 0x4b, 0xbf, 0xad, 0xd9, 0x0d, 0x44, 0x95, 0x3c, 0xf6,
	0xa2, 0xdb, 0x75, 0x5c, 0x60, 0xe2, 0xaf, 0xbc, 0x34, 0x2c, 0xc1, 0xb9, 0x3e, 0x73, 0x81, 0xec,
	0x35, 0xcc, 0xb8, 0xb0, 0xbd, 0x9e, 0xaf, 0xbc, 0xd4, 0x2f, 0x47, 0x8b, 0xa5, 0x70, 0x61, 0x88,
	0x53, 0x72, 0xb1, 0xf2, 0xd2, 0xc5, 0xe6, 0xea, 0xe9, 0x0f, 0xbe, 0x12, 0xa7, 0xd2, 0x12, 0x43,
	0x06, 0x8d, 0x82, 0xeb, 0x1f, 0xc9, 0xa5, 0xcd, 0x3e, 0x5a, 0xec, 0x2d, 0xbc, 0xe0, 0x3d, 0x1d,
	0xa4, 0x6e, 0x0d, 0xee, 0xf6, 0xa7, 0x64, 0x66, 0xa3, 0xd1, 0xa3, 0xaf, 0x38, 0xb1, 0x6b, 0x00,
	0xa5, 0x51, 0x71, 0x6d, 0x81, 0xc0, 0x02, 0xe1, 0xe8, 0x29, 0x4e, 0xec, 0x0e, 0xc2, 0xca, 0x0e,
	0x67, 0xc7, 0x29, 0x99, 0xdb, 0x21, 0x2c, 0x33, 0xb7, 0xce, 0x6c, 0x5a, 0x67, 0xf6, 0x6d, 0x5a,
	0x67, 0x39, 0x77, 0xf0, 0x96, 0x06, 0x61, 0xaf, 0xea, 0x51, 0x18, 0x3e, 0x2f, 0x74, 0xf0, 0x96,
	0x6e, 0x0b, 0x88, 0xfe, 0xf8, 0x20, 0x0b, 0xe1, 0x12, 0xb5, 0x96, 0x3a, 0x3e, 0x63, 0x11, 0x04,
	0xc3, 0x5d, 0xb4, 0x5d, 0x13, 0x7b, 0x6c, 0x01, 0x40, 0x9a, 0x77, 0xe6, 0x1e, 0x35, 0xd6, 0xb1,
	0x3f, 0x04, 0x35, 0x0a, 0xf9, 0x80, 0x75, 0x5c, 0x6d, 0xbe, 0xc3, 0x7c, 0xcc, 0x61, 0xd8, 0x17,
	0x78, 0xf9, 0xd7, 0x7a, 0xd9, 0xf5, 0xe3, 0x20, 0xff, 0x75, 0x3a, 0xcb, 0x37, 0xff, 0x0b, 0xbb,
	0xab, 0x58, 0x9f, 0xed, 0x67, 0xb6, 0xff, 0xf7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x64, 0xba,
	0x5f, 0x54, 0x1e, 0x03, 0x00, 0x00,
}
